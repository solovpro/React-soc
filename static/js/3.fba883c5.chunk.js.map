{"version":3,"sources":["components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/MyPosts/Post/Post.js","components/Profile/MyPosts/MyPosts.js","components/Profile/MyPosts/MyPostsContainer.js","components/Profile/ProfileInfo/ProfileStatusWithHooks.js","components/Profile/ProfileInfo/ProfileDataForm.js","components/Profile/ProfileInfo/ProfileInfo.js","components/Profile/Profile.js","components/Profile/ProfileContainer.js","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/Profile.module.css"],"names":["module","exports","Post","props","className","s","item","src","alt","message","countLike","MyPosts","React","memo","postElements","posts","map","p","post","postsBlock","public","onSubmit","value","addPost","newPostText","MyPostsForm","useForm","register","errors","handleSubmit","name","ref","required","placeholder","button","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onChange","e","currentTarget","onBlur","updateStatus","ProfileDataForm","defaultValues","profile","profileInfoAction","error","redaction","margin","info","input","hr","type","b","textarea","aboutMe","contacts","contactsText","contactBlock","Object","keys","key","ProfileData","profileInfo","isOwner","onClick","goToEditMode","discript","fullName","lookingForAJob","lookingForAJobDescription","contactTitle","contactValue","Contact","contact","ProfileInfo","formData","a","saveProfile","photoInfo","descriptionBlock","photos","large","userPhoto","ProfileImage","setPhoto","target","files","length","savePhoto","initialValues","Profile","content","ProfileContainer","userId","this","match","params","myUserId","history","push","getUserProfileThunk","getStatus","refreshProfile","prevProps","prevState","snapshot","Component","composeFunc","compose","withRouter","auth","isAuth"],"mappings":"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","file":"static/js/3.fba883c5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__i_Np9\",\"posts\":\"MyPosts_posts__34CpT\",\"public\":\"MyPosts_public__26ARC\",\"button\":\"MyPosts_button__A-Vh3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__R2tnv\"};","import s from './Post.module.css';\r\n\r\nlet Post = (props) => {\r\n      return (\r\n            <div className = {s.item}>\r\n                  <img src=\"https://www.zastavki.com/pictures/2560x1600/2018Backgrounds_Purple_background_with_spiral_pattern_127254_19.jpg\" alt=\"\" />\r\n                  {props.message}\r\n                  <div>\r\n                        <span>like: {props.countLike}</span>\r\n                  </div>\r\n            </div>\r\n      );\r\n}\r\n\r\nexport default Post;","import s from './MyPosts.module.css';\r\nimport Post from './Post/Post.js';\r\nimport React from 'react';\r\nimport {useForm} from \"react-hook-form\";\r\n\r\nconst MyPosts = React.memo(props => {\r\n\r\n        let postElements = props.posts\r\n            .map(p => <div className={s.post}><Post\r\n                message={p.message}\r\n                countLike={p.countLike}/></div>)\r\n\r\n\r\n        let addNewPostText = (value) => {\r\n            props.addPost(value.newPostText);\r\n        }\r\n\r\n        return (\r\n            <div className={s.postsBlock}>\r\n                <div className={s.public}>\r\n                    <MyPostsForm onSubmit={addNewPostText}/>\r\n                </div>\r\n                <div>\r\n                    {postElements}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nlet MyPostsForm = (props) => {\r\n    const {register, errors, handleSubmit} = useForm();\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit(props.onSubmit)}>\r\n            <div>\r\n                <textarea name={'newPostText'}\r\n                          ref={register({\r\n                              required: true\r\n                          })}\r\n                          placeholder='Что у вас нового?'/>\r\n                {errors.newPostText && <h1>\"Введите сообщение!\"</h1>}\r\n            </div>\r\n            <div>\r\n                <button className={s.button}>Опубликовать</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nexport default MyPosts;","import {addPostActionCreator} from '../../../redux/profile-reducer';\r\nimport MyPosts from './MyPosts.js';\r\nimport {connect} from \"react-redux\";\r\n// eslint-disable-next-line no-unused-vars\r\nimport React from 'react';\r\n\r\nlet mapStateToProps = (state) => {\r\n      return{\r\n            posts: state.profilePage.posts\r\n      }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n      return {\r\n            addPost: (newPostText) => {\r\n                  dispatch(addPostActionCreator(newPostText));\r\n            }\r\n      }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React, {useState, useEffect} from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status);\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n            <div>\r\n                <span onDoubleClick={ activateEditMode }>{props.status || '-'}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input autoFocus={true} onChange={ onStatusChange } onBlur={ deactivateEditMode }\r\n                value={status}/>\r\n            </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import s from \"./ProfileInfo.module.css\";\r\nimport {useForm} from \"react-hook-form\";\r\n\r\nconst ProfileDataForm = (props) => {\r\n\r\n    const {register, handleSubmit} = useForm({\r\n        defaultValues: props.profile\r\n    });\r\n\r\n    return <form className={s.profileInfoAction} onSubmit={handleSubmit(props.onSubmit)}>\r\n        <button className={s.button}>Сохранить</button>\r\n        <div>{props.error ? <div className={s.error}>{props.error}</div> : ''}</div>\r\n        <div className={s.redaction}>Режим редактирования</div>\r\n        <div className={s.margin}>\r\n            <div className={s.name && s.info}>\r\n                <b>Ник:</b> <input className={s.input} ref={register({\r\n                required: true\r\n            })} placeholder={'Введите новый ник'} name={'fullName'}/>\r\n                <hr className={s.hr}/>\r\n            </div>\r\n            <div className={s.info}>\r\n                Поиск работы: <input className={s.input} ref={register({\r\n                required: false\r\n            })} placeholder={''} name={'lookingForAJob'} type={'checkbox'}/>\r\n                <hr className={s.hr}/>\r\n            </div>\r\n            <div className={s.info}>\r\n                <b className={s.b}>Навыки работы:</b> <textarea className={s.input && s.textarea} ref={register({\r\n                required: true\r\n            })} placeholder={''} name={'lookingForAJobDescription'}/>\r\n                <hr className={s.hr}/>\r\n            </div>\r\n            <div className={s.aboutMe && s.info}>\r\n                <b>Обо мне:</b> <textarea className={s.input && s.textarea} ref={register({\r\n                required: true\r\n            })} placeholder={'Расскажите о себе'} name={'aboutMe'}/>\r\n                <hr className={s.hr}/>\r\n            </div>\r\n            <div className={s.contacts}>\r\n                <div className={s.contactsText}><b>Контакты:</b></div>\r\n                <div className={s.contactBlock}>\r\n                    {Object.keys(props.profile.contacts).map((key, props) => {\r\n                        return (\r\n                            <div>\r\n                                <b>{key}:</b><input className={s.input} ref={register({\r\n                                    required: false\r\n                                })} placeholder={key} name={'contacts.' + key}/>\r\n                            </div>\r\n                    )\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </form>\r\n}\r\n\r\nexport default ProfileDataForm;","import s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/Loading/Loading\";\r\nimport userPhoto from \"../../../assets/images/user.png\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport {useState} from \"react\";\r\nimport ProfileDataForm from './ProfileDataForm'\r\n\r\nconst ProfileInfo = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            props.savePhoto(e.target.files[0]);\r\n        }\r\n    }\r\n\r\n    const onSubmit = async (formData) => {\r\n        await props.saveProfile(formData);\r\n        setEditMode(false);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={s.photoInfo}>\r\n                <div className={s.descriptionBlock}>\r\n                    <img src={props.profile.photos.large ? props.profile.photos.large : userPhoto} alt=\"\"\r\n                         className={s.ProfileImage}/>\r\n                    <div className={s.status}><ProfileStatusWithHooks status={props.status}\r\n                                                                      updateStatus={props.updateStatus}/></div>\r\n                    <div className={s.setPhoto}>\r\n                        {props.isOwner &&\r\n                        <p>Сменить фото:</p>}\r\n                        {props.isOwner &&\r\n                    <input className={s.input} type=\"file\" onChange={onMainPhotoSelected}/>}\r\n                    </div>\r\n                </div>\r\n                {editMode ? <ProfileDataForm profile={props.profile}\r\n                                             error={props.error}\r\n                                             status={props.status}\r\n                                             updateStatus={props.updateStatus}\r\n                                             onSubmit={onSubmit}\r\n                                             initialValues={props.profile}/>\r\n                    : <ProfileData profile={props.profile}\r\n                                   status={props.status}\r\n                                   updateStatus={props.updateStatus}\r\n                                   isOwner={props.isOwner}\r\n                                   goToEditMode={() => {\r\n                                       setEditMode(true)\r\n                                   }}/>}\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nconst ProfileData = (props) => {\r\n    return <div className={s.profileInfo}>\r\n        {props.isOwner && <div onClick={props.goToEditMode}>\r\n            <button className={s.button}>Редактировать</button>\r\n        </div>}\r\n        <div className={s.discript}>Описание профиля:</div>\r\n        <div className={s.margin}>\r\n            <div className={s.name && s.info}>\r\n                <b>Ник:</b> {props.profile.fullName}\r\n                <hr className={s.hr}/>\r\n            </div>\r\n            <div className={s.info}>\r\n                Поиск работы: {props.profile.lookingForAJob? 'ищу' : 'не ищу'}\r\n                <hr className={s.hr}/>\r\n            </div>\r\n            {props.profile.lookingForAJobDescription &&\r\n            <div className={s.info}>\r\n                <b>Навыки работы:</b> {props.profile.lookingForAJobDescription\r\n                ? props.profile.lookingForAJobDescription : '---'}\r\n                <hr className={s.hr}/>\r\n            </div>}\r\n            <div className={s.aboutMe && s.info}>\r\n                <b>Обо мне:</b> {props.profile.aboutMe ? props.profile.aboutMe : '---'}\r\n                <hr className={s.hr}/>\r\n            </div>\r\n            <div className={s.contacts}>\r\n                <div className={s.contactsText}><b>Контакты:</b></div>\r\n                <div className={s.contactBlock}>\r\n                    {Object.keys(props.profile.contacts).map(key => {\r\n                        return <Contact key={key} contactTitle={key} contactValue={props.profile.contacts[key]}/>\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n}\r\n\r\n\r\nexport const Contact = ({contactTitle, contactValue}) => {\r\n    return <div className={s.contact}><b>{contactTitle}:</b>{contactValue}</div>\r\n}\r\n\r\nexport default ProfileInfo;","import s from './Profile.module.css';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer.js';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo.js';\r\nimport React from \"react\";\r\n\r\nconst Profile = (props) => {\r\n\r\n    return (\r\n        <div className={s.content}>\r\n            <ProfileInfo profile={props.profile} status={props.status}\r\n                         updateStatus={props.updateStatus} isOwner={props.isOwner}\r\n                        savePhoto={props.savePhoto} saveProfile={props.saveProfile}\r\n                         error={props.error}/>\r\n            <MyPostsContainer/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;","import Profile from \"./Profile\";\r\nimport React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfileThunk, savePhoto, saveProfile, updateStatus} from '../../redux/profile-reducer'\r\nimport {withRouter} from \"react-router\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.myUserId;\r\n            if (!userId) {\r\n                this.props.history.push('/login');\r\n            }\r\n        }\r\n        this.props.getUserProfileThunk(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.match.params.userId !== this.props.match.params.userId) {\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile profile={this.props.profile}\r\n                     isOwner={!this.props.match.params.userId}\r\n                     status={this.props.status}\r\n                     updateStatus={this.props.updateStatus}\r\n                     savePhoto={this.props.savePhoto}\r\n                     saveProfile={this.props.saveProfile}\r\n                     error={this.props.error}/>\r\n        );\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    myUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth,\r\n    error: state.profilePage.error\r\n});\r\n\r\nlet composeFunc = compose(\r\n    withRouter\r\n)(ProfileContainer);\r\n\r\nexport default connect(mapStateToProps,\r\n    {getUserProfileThunk, getStatus, updateStatus, savePhoto, saveProfile})(composeFunc);\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__100dt\",\"input\":\"ProfileInfo_input__MN0pH\",\"setPhoto\":\"ProfileInfo_setPhoto__crbHQ\",\"BigImage\":\"ProfileInfo_BigImage__WPBMq\",\"ProfileImage\":\"ProfileInfo_ProfileImage__1bng3\",\"profileInfo\":\"ProfileInfo_profileInfo__RkN0O\",\"button\":\"ProfileInfo_button__2ZeFb\",\"margin\":\"ProfileInfo_margin__v5vNE\",\"name\":\"ProfileInfo_name__J2wkh\",\"info\":\"ProfileInfo_info__2ULyZ\",\"textarea\":\"ProfileInfo_textarea__iZO1D\",\"hr\":\"ProfileInfo_hr__3z7_0\",\"profileInfoAction\":\"ProfileInfo_profileInfoAction__dsrQ1\",\"error\":\"ProfileInfo_error__3563o\",\"contacts\":\"ProfileInfo_contacts__2ekUY\",\"contactsText\":\"ProfileInfo_contactsText__3e8Oe\",\"contactBlock\":\"ProfileInfo_contactBlock__3skXk\",\"contact\":\"ProfileInfo_contact__qYAYI\",\"photoInfo\":\"ProfileInfo_photoInfo__1zy7P\",\"discript\":\"ProfileInfo_discript__3G8Wb\",\"redaction\":\"ProfileInfo_redaction__Ln47H\",\"profileStatus\":\"ProfileInfo_profileStatus__3Rjm7\",\"status\":\"ProfileInfo_status__TeqEx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Profile_content__3gPxi\"};"],"sourceRoot":""}